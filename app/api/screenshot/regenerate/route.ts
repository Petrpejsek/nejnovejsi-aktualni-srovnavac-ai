import { NextRequest, NextResponse } from 'next/server'

// Stejn√° funkce jako v scraping API
async function createScreenshot(url: string, productName: string): Promise<string | null> {
  try {
    // Pokus o screenshot pomoc√≠ Python serveru
    const response = await fetch('http://localhost:5000/screenshot', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ url, name: productName })
    })

    if (!response.ok) {
      console.warn(`‚ö†Ô∏è Screenshot server nedostupn√Ω pro ${url}`)
      return null
    }

    const data = await response.json()
    
    console.log(`üìä Screenshot server odpovƒõƒè:`, data)
    
    if (data.success && data.screenshotUrl) {
      console.log(`üì∏ Screenshot vytvo≈ôen: ${data.screenshotUrl}`)
      return data.screenshotUrl
    } else {
      console.warn(`‚ö†Ô∏è Screenshot nebyl vytvo≈ôen: ${data.error}`)
      return null
    }

  } catch (error) {
    console.warn(`‚ö†Ô∏è Chyba p≈ôi vytv√°≈ôen√≠ screenshotu pro ${url}:`, error)
    return null
  }
}

export async function POST(request: NextRequest) {
  try {
    const { url, productName } = await request.json()

    if (!url) {
      return NextResponse.json({
        success: false,
        error: 'URL je vy≈æadov√°na'
      }, { status: 400 })
    }

    if (!productName) {
      return NextResponse.json({
        success: false,
        error: 'N√°zev produktu je vy≈æadov√°n'
      }, { status: 400 })
    }

    console.log(`üîÑ Regeneruji screenshot pro: ${url}`)

    // Vytvo≈ôit nov√Ω screenshot
    const screenshotUrl = await createScreenshot(url, productName)

    if (!screenshotUrl) {
      return NextResponse.json({
        success: false,
        error: 'Nepoda≈ôilo se vytvo≈ôit screenshot. Zkontrolujte zda je screenshot server spu≈°tƒõn√Ω.'
      }, { status: 500 })
    }

    console.log(`‚úÖ Screenshot √∫spƒõ≈°nƒõ regenerov√°n: ${screenshotUrl}`)

    return NextResponse.json({
      success: true,
      screenshotUrl,
      message: 'Screenshot byl √∫spƒõ≈°nƒõ regenerov√°n'
    })

  } catch (error) {
    console.error('‚ùå Chyba p≈ôi regeneraci screenshotu:', error)
    return NextResponse.json({
      success: false,
      error: 'Vnit≈ôn√≠ chyba serveru'
    }, { status: 500 })
  }
} 