#!/usr/bin/env node

/**
 * üìä KONTROLA STAVU SCREENSHOT≈Æ
 * 
 * Rychl√° anal√Ωza kolik produkt≈Ø m√°/nem√° screenshoty
 */

import { PrismaClient } from '@prisma/client'
import fs from 'fs'
import path from 'path'

const prisma = new PrismaClient()

async function checkScreenshotStatus() {
  console.log('üìä Kontroluji stav screenshot≈Ø v datab√°zi...\n')

  try {
    // Naƒçteme v≈°echny aktivn√≠ produkty
    const allProducts = await prisma.product.findMany({
      where: { isActive: true },
      select: {
        id: true,
        name: true,
        imageUrl: true,
        externalUrl: true
      }
    })

    console.log(`üìã Celkem aktivn√≠ch produkt≈Ø: ${allProducts.length}`)

    // Kategorizace produkt≈Ø podle stavu screenshot≈Ø
    const stats = {
      total: allProducts.length,
      hasImageUrl: 0,
      noImageUrl: 0,
      existingFiles: 0,
      missingFiles: 0,
      externalUrls: 0,
      noExternalUrl: 0
    }

    const categories = {
      ready: [],        // M√° imageUrl a soubor existuje
      missingFile: [],  // M√° imageUrl ale soubor neexistuje  
      noImage: [],      // Nem√° imageUrl v≈Øbec
      noUrl: []         // Nem√° extern√≠ URL
    }

    allProducts.forEach(product => {
      // Kontrola extern√≠ URL
      if (!product.externalUrl) {
        stats.noExternalUrl++
        categories.noUrl.push(product)
        return
      }
      stats.noExternalUrl = allProducts.length - stats.noExternalUrl

      // Kontrola imageUrl
      if (!product.imageUrl) {
        stats.noImageUrl++
        categories.noImage.push(product)
        return
      }
      
      stats.hasImageUrl++

      // Kontrola existence souboru (pouze pro lok√°ln√≠ cesty)
      if (product.imageUrl.startsWith('http')) {
        stats.externalUrls++
        categories.ready.push(product)
      } else {
        const fullPath = path.join(process.cwd(), 'public', product.imageUrl)
        if (fs.existsSync(fullPath)) {
          stats.existingFiles++
          categories.ready.push(product)
        } else {
          stats.missingFiles++
          categories.missingFile.push(product)
        }
      }
    })

    // V√Ωsledky
    console.log('\n' + '='.repeat(60))
    console.log('üìä STATISTIKY SCREENSHOT≈Æ')
    console.log('='.repeat(60))
    
    console.log(`üìã Celkem produkt≈Ø: ${stats.total}`)
    console.log(`üîó S extern√≠ URL: ${allProducts.length - stats.noExternalUrl}`)
    console.log(`‚ùå Bez extern√≠ URL: ${stats.noExternalUrl}`)
    
    console.log('\nüì∏ STAV OBR√ÅZK≈Æ:')
    console.log(`‚úÖ Hotov√© (maj√≠ obr√°zek): ${categories.ready.length}`)
    console.log(`‚ùå Chyb√≠ soubor: ${categories.missingFile.length}`)
    console.log(`üö´ Bez imageUrl: ${categories.noImage.length}`)
    console.log(`‚ö†Ô∏è  Bez extern√≠ URL: ${categories.noUrl.length}`)

    const needsScreenshots = categories.missingFile.length + categories.noImage.length
    console.log(`\nüéØ POT≈òEBUJE SCREENSHOTY: ${needsScreenshots} produkt≈Ø`)

    // Detaily problematick√Ωch produkt≈Ø
    if (categories.missingFile.length > 0) {
      console.log('\n‚ùå PRODUKTY S CHYBƒöJ√çC√çMI SOUBORY:')
      categories.missingFile.slice(0, 10).forEach((product, index) => {
        console.log(`${index + 1}. ${product.name} ‚Üí ${product.imageUrl}`)
      })
      if (categories.missingFile.length > 10) {
        console.log(`   ... a dal≈°√≠ch ${categories.missingFile.length - 10} produkt≈Ø`)
      }
    }

    if (categories.noImage.length > 0) {
      console.log('\nüö´ PRODUKTY BEZ IMAGEURL:')
      categories.noImage.slice(0, 10).forEach((product, index) => {
        console.log(`${index + 1}. ${product.name}`)
      })
      if (categories.noImage.length > 10) {
        console.log(`   ... a dal≈°√≠ch ${categories.noImage.length - 10} produkt≈Ø`)
      }
    }

    if (categories.noUrl.length > 0) {
      console.log('\n‚ö†Ô∏è  PRODUKTY BEZ EXTERN√ç URL:')
      categories.noUrl.slice(0, 5).forEach((product, index) => {
        console.log(`${index + 1}. ${product.name}`)
      })
      if (categories.noUrl.length > 5) {
        console.log(`   ... a dal≈°√≠ch ${categories.noUrl.length - 5} produkt≈Ø`)
      }
    }

    console.log('\nüí° DOPORUƒåEN√ç:')
    if (needsScreenshots > 0) {
      console.log('   1. Spus≈•te screenshot server: ./start-screenshot-server.sh')
      console.log('   2. Spus≈•te opravu: node scripts/fix-missing-screenshots.js')
    } else {
      console.log('   üéâ V≈°echny produkty maj√≠ screenshoty!')
    }

  } catch (error) {
    console.error('‚ùå Chyba:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkScreenshotStatus() 