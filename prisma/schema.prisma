generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AdClick {
  id                String   @id
  campaignId        String
  companyId         String
  ipAddress         String
  userAgent         String?
  country           String?
  referrer          String?
  costPerClick      Float
  isValidClick      Boolean  @default(true)
  fraudReason       String?
  conversionTracked Boolean  @default(false)
  conversionValue   Float?
  clickedAt         DateTime @default(now())
  Campaign          Campaign @relation(fields: [campaignId], references: [id], onDelete: Cascade)
  Company           Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)

  @@index([campaignId])
  @@index([clickedAt])
  @@index([companyId])
  @@index([ipAddress])
  @@index([isValidClick])
}

model AdImpression {
  id           String   @id
  campaignId   String
  position     Int
  pageType     String
  categorySlug String?
  ipAddress    String
  country      String?
  displayedAt  DateTime @default(now())
  Campaign     Campaign @relation(fields: [campaignId], references: [id], onDelete: Cascade)

  @@index([campaignId])
  @@index([displayedAt])
  @@index([pageType])
  @@index([position])
}

model BillingRecord {
  id              String    @id
  companyId       String
  type            String
  amount          Float
  description     String
  paymentMethod   String?
  paymentIntentId String?
  invoiceNumber   String?
  invoiceUrl      String?
  campaignId      String?
  clickId         String?
  status          String    @default("completed")
  createdAt       DateTime  @default(now())
  processedAt     DateTime?
  Company         Company   @relation(fields: [companyId], references: [id], onDelete: Cascade)

  @@index([companyId])
  @@index([createdAt])
  @@index([status])
  @@index([type])
}

model Campaign {
  id               String         @id
  companyId        String
  name             String
  productId        String
  targetUrl        String
  bidAmount        Float
  dailyBudget      Float
  totalBudget      Float?
  status           String         @default("active")
  isApproved       Boolean        @default(false)
  targetCategories Json?
  targetCountries  Json?
  todaySpent       Float          @default(0.0)
  todayImpressions Int            @default(0)
  todayClicks      Int            @default(0)
  totalImpressions Int            @default(0)
  totalClicks      Int            @default(0)
  totalSpent       Float          @default(0.0)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime
  startDate        DateTime?
  endDate          DateTime?
  bid              Decimal?       @default(1.00) @db.Decimal(10, 2)
  AdClick          AdClick[]
  AdImpression     AdImpression[]
  Company          Company        @relation(fields: [companyId], references: [id], onDelete: Cascade)

  @@index([companyId])
  @@index([createdAt])
  @@index([isApproved])
  @@index([productId])
  @@index([status])
}

model Category {
  id             String     @id
  name           String     @unique
  slug           String     @unique
  icon           String?
  parent_id      String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime
  Category       Category?  @relation("CategoryToCategory", fields: [parent_id], references: [id])
  other_Category Category[] @relation("CategoryToCategory")
  Product        Product[]

  @@index([parent_id])
}

model Click {
  id        Int      @id @default(autoincrement())
  productId String
  visitorId String
  ipAddress String?
  createdAt DateTime @default(now())

  @@index([productId])
  @@index([visitorId])
}

model Company {
  id                    String          @id
  name                  String
  email                 String          @unique
  hashedPassword        String
  contactPerson         String
  website               String?
  description           String?
  logoUrl               String?
  balance               Float           @default(0.0)
  totalSpent            Float           @default(0.0)
  autoRecharge          Boolean         @default(false)
  autoRechargeAmount    Float?
  autoRechargeThreshold Float?
  taxId                 String?
  billingAddress        String?
  billingCountry        String?
  status                String          @default("active")
  isVerified            Boolean         @default(false)
  createdAt             DateTime        @default(now())
  updatedAt             DateTime
  lastLoginAt           DateTime?
  assignedProductId     String?
  AdClick               AdClick[]
  BillingRecord         BillingRecord[]
  Campaign              Campaign[]

  @@index([createdAt])
  @@index([email])
  @@index([status])
}

model CompanyApplications {
  id            String    @id
  companyName   String
  contactPerson String
  businessEmail String
  website       String?
  productUrls   Json?
  description   String?
  status        String    @default("pending")
  adminNotes    String?
  submittedAt   DateTime  @default(now())
  reviewedAt    DateTime?
  reviewedBy    String?

  @@index([businessEmail])
  @@index([status])
  @@index([submittedAt])
}

model Product {
  id                    String    @id
  name                  String
  description           String?
  price                 Float
  category              String?
  imageUrl              String?
  detailInfo            String?
  externalUrl           String?
  hasTrial              Boolean   @default(false)
  createdAt             DateTime  @default(now())
  updatedAt             DateTime
  imageApprovalStatus   String?
  pendingImageUrl       String?
  reviews               Json?
  videoUrls             Json?
  primary_category_id   String?
  secondary_category_id String?
  tags                  Json?
  advantages            Json?
  disadvantages         Json?
  pricingInfo           Json?
  deletedAt             DateTime?
  deletedBy             String?
  isActive              Boolean   @default(true)
  adminNotes            String?
  changesApprovedAt     DateTime?
  changesApprovedBy     String?
  changesStatus         String?
  changesSubmittedAt    DateTime?
  changesSubmittedBy    String?
  hasPendingChanges     Boolean   @default(false)
  pendingChanges        Json?
  Category              Category? @relation(fields: [primary_category_id], references: [id])

  @@index([changesStatus])
  @@index([hasPendingChanges])
  @@index([isActive])
  @@index([primary_category_id])
  @@index([secondary_category_id])
}

model SavedProduct {
  id          String   @id @default(uuid())
  userId      String
  productId   String
  productName String
  category    String?
  imageUrl    String?
  price       Float?
  savedAt     DateTime @default(now())
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, productId])
  @@index([productId])
  @@index([savedAt])
  @@index([userId])
}

model ClickHistory {
  id          String   @id @default(uuid())
  userId      String
  productId   String
  productName String
  category    String?
  imageUrl    String?
  price       Float?
  externalUrl String?
  clickedAt   DateTime @default(now())
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([clickedAt])
  @@index([productId])
}

model PromotionalPackage {
  id            String   @id @default(uuid())
  title         String
  description   String
  amount        Float
  bonus         Float
  savings       Float?
  popular       Boolean  @default(false)
  firstTime     Boolean  @default(false)
  minimumSpend  Float    @default(0)
  active        Boolean  @default(true)
  order         Int      @default(1)
  targetStatus  String   @default("all")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([active])
  @@index([order])
  @@index([targetStatus])
}

// AiRecommendation model dočasně schován pro commit
// model AiRecommendation {
//   id                   String   @id @default(uuid())
//   userId               String
//   productId            String
//   productName          String
//   category             String?
//   description          String?
//   recommendationReason String?
//   confidenceScore      Int      @default(85)
//   aiInsight           String?
//   imageUrl            String?
//   price               Float?
//   tags                Json?
//   externalUrl         String?
//   createdAt           DateTime @default(now())
//   User                User     @relation(fields: [userId], references: [id], onDelete: Cascade)
//
//   @@index([userId])
//   @@index([createdAt])
//   @@index([confidenceScore])
//   @@index([productId])
// }

model User {
  id               String             @id
  name             String
  email            String             @unique
  hashedPassword   String?
  googleId         String?            @unique
  avatar           String?
  premium          Boolean            @default(false)
  points           Int                @default(0)
  level            String             @default("Beginner")
  streak           Int                @default(0)
  joinDate         DateTime           @default(now())
  lastLoginAt      DateTime?
  isActive         Boolean            @default(true)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @default(now())
  toolsUsed        Int                @default(0)
  favoriteTools    Json?              @default("[]")
  achievements     Json?              @default("[]")
  preferences      Json?              @default("{}")
  settings         Json?              @default("{}")
  SavedProduct     SavedProduct[]
  ClickHistory     ClickHistory[]
  // AiRecommendation AiRecommendation[] // Dočasně schováno

  @@index([createdAt])
  @@index([isActive])
  @@index([premium])
}
