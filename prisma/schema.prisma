generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AdClick {
  id                String   @id
  campaignId        String
  companyId         String
  ipAddress         String
  userAgent         String?
  country           String?
  referrer          String?
  costPerClick      Float
  isValidClick      Boolean  @default(true)
  fraudReason       String?
  conversionTracked Boolean  @default(false)
  conversionValue   Float?
  clickedAt         DateTime @default(now())
  Campaign          Campaign @relation(fields: [campaignId], references: [id], onDelete: Cascade)
  Company           Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)

  @@index([campaignId])
  @@index([clickedAt])
  @@index([companyId])
  @@index([ipAddress])
  @@index([isValidClick])
}

model AdImpression {
  id           String   @id
  campaignId   String
  position     Int
  pageType     String
  categorySlug String?
  ipAddress    String
  country      String?
  displayedAt  DateTime @default(now())
  Campaign     Campaign @relation(fields: [campaignId], references: [id], onDelete: Cascade)

  @@index([campaignId])
  @@index([displayedAt])
  @@index([pageType])
  @@index([position])
}

model BillingRecord {
  id              String    @id
  companyId       String
  type            String
  amount          Float
  description     String
  paymentMethod   String?
  paymentIntentId String?
  invoiceNumber   String?
  invoiceUrl      String?
  campaignId      String?
  clickId         String?
  status          String    @default("completed")
  createdAt       DateTime  @default(now())
  processedAt     DateTime?
  Company         Company   @relation(fields: [companyId], references: [id], onDelete: Cascade)

  @@index([companyId])
  @@index([createdAt])
  @@index([status])
  @@index([type])
}

model Campaign {
  id               String         @id
  companyId        String
  name             String
  productId        String
  targetUrl        String
  bidAmount        Float
  dailyBudget      Float
  totalBudget      Float?
  status           String         @default("active")
  isApproved       Boolean        @default(false)
  targetCategories Json?
  targetCountries  Json?
  todaySpent       Float          @default(0.0)
  todayImpressions Int            @default(0)
  todayClicks      Int            @default(0)
  totalImpressions Int            @default(0)
  totalClicks      Int            @default(0)
  totalSpent       Float          @default(0.0)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime
  startDate        DateTime?
  endDate          DateTime?
  bid              Decimal?       @default(1.00) @db.Decimal(10, 2)
  AdClick          AdClick[]
  AdImpression     AdImpression[]
  Company          Company        @relation(fields: [companyId], references: [id], onDelete: Cascade)

  @@index([companyId])
  @@index([createdAt])
  @@index([isApproved])
  @@index([productId])
  @@index([status])
}

model Category {
  id             String     @id
  name           String     @unique
  slug           String     @unique
  icon           String?
  parent_id      String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime
  Category       Category?  @relation("CategoryToCategory", fields: [parent_id], references: [id])
  other_Category Category[] @relation("CategoryToCategory")
  Product        Product[]

  @@index([parent_id])
}

model Click {
  id        Int      @id @default(autoincrement())
  productId String
  visitorId String
  ipAddress String?
  createdAt DateTime @default(now())

  @@index([productId])
  @@index([visitorId])
}

model Company {
  id                    String          @id
  name                  String
  email                 String          @unique
  hashedPassword        String
  contactPerson         String
  website               String?
  description           String?
  logoUrl               String?
  balance               Float           @default(0.0)
  totalSpent            Float           @default(0.0)
  autoRecharge          Boolean         @default(false)
  autoRechargeAmount    Float?
  autoRechargeThreshold Float?
  taxId                 String?
  billingAddress        String?
  billingCountry        String?
  status                String          @default("active")
  isVerified            Boolean         @default(false)
  createdAt             DateTime        @default(now())
  updatedAt             DateTime
  lastLoginAt           DateTime?
  assignedProductId     String?
  AdClick               AdClick[]
  BillingRecord         BillingRecord[]
  Campaign              Campaign[]

  @@index([createdAt])
  @@index([email])
  @@index([status])
}

model CompanyApplications {
  id            String    @id
  companyName   String
  contactPerson String
  businessEmail String
  website       String?
  productUrls   Json?
  description   String?
  status        String    @default("pending")
  adminNotes    String?
  submittedAt   DateTime  @default(now())
  reviewedAt    DateTime?
  reviewedBy    String?

  @@index([businessEmail])
  @@index([status])
  @@index([submittedAt])
}

model Product {
  id                    String    @id
  name                  String
  description           String?
  price                 Float
  category              String?
  imageUrl              String?
  detailInfo            String?
  externalUrl           String?
  hasTrial              Boolean   @default(false)
  createdAt             DateTime  @default(now())
  updatedAt             DateTime
  imageApprovalStatus   String?
  pendingImageUrl       String?
  reviews               Json?
  videoUrls             Json?
  primary_category_id   String?
  secondary_category_id String?
  tags                  Json?
  advantages            Json?
  disadvantages         Json?
  pricingInfo           Json?
  deletedAt             DateTime?
  deletedBy             String?
  isActive              Boolean   @default(true)
  adminNotes            String?
  changesApprovedAt     DateTime?
  changesApprovedBy     String?
  changesStatus         String?
  changesSubmittedAt    DateTime?
  changesSubmittedBy    String?
  hasPendingChanges     Boolean   @default(false)
  pendingChanges        Json?
  Category              Category? @relation(fields: [primary_category_id], references: [id])

  @@index([changesStatus])
  @@index([hasPendingChanges])
  @@index([isActive])
  @@index([primary_category_id])
  @@index([secondary_category_id])
}

model SavedProduct {
  id          String   @id @default(uuid())
  userId      String
  productId   String
  productName String
  category    String?
  imageUrl    String?
  price       Float?
  savedAt     DateTime @default(now())
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, productId])
  @@index([productId])
  @@index([savedAt])
  @@index([userId])
}

model ClickHistory {
  id          String   @id @default(uuid())
  userId      String
  productId   String
  productName String
  category    String?
  imageUrl    String?
  price       Float?
  externalUrl String?
  clickedAt   DateTime @default(now())
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([clickedAt])
  @@index([productId])
}

model PromotionalPackage {
  id           String   @id @default(uuid())
  title        String
  description  String
  amount       Float
  bonus        Float
  savings      Float?
  popular      Boolean  @default(false)
  firstTime    Boolean  @default(false)
  minimumSpend Float    @default(0)
  active       Boolean  @default(true)
  order        Int      @default(1)
  targetStatus String   @default("all")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([active])
  @@index([order])
  @@index([targetStatus])
}

model User {
  id             String         @id
  name           String
  email          String         @unique
  hashedPassword String?
  googleId       String?        @unique
  avatar         String?
  premium        Boolean        @default(false)
  points         Int            @default(0)
  level          String         @default("Beginner")
  streak         Int            @default(0)
  joinDate       DateTime       @default(now())
  lastLoginAt    DateTime?
  isActive       Boolean        @default(true)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @default(now())
  toolsUsed      Int            @default(0)
  favoriteTools  Json?          @default("[]")
  achievements   Json?          @default("[]")
  preferences    Json?          @default("{}")
  settings       Json?          @default("{}")
  ClickHistory   ClickHistory[]
  SavedProduct   SavedProduct[]

  @@index([createdAt])
  @@index([isActive])
  @@index([premium])
}

model Reel {
  id           String   @id @default(cuid())
  title        String
  description  String?
  videoUrl     String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  thumbnailUrl String?
  adEnabled    Boolean  @default(false)
  adLink       String?
  adText       String?
}

model TopList {
  id          String   @id @default(uuid())
  title       String
  description String
  category    String
  products    Json
  status      String   @default("draft")
  clicks      Int      @default(0)
  conversion  Float    @default(0.0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([category])
  @@index([status])
  @@index([createdAt])
}

model Admin {
  id             String    @id @default(uuid())
  name           String
  email          String    @unique
  hashedPassword String
  role           String    @default("super_admin")
  isActive       Boolean   @default(true)
  lastLoginAt    DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  @@index([email])
  @@index([isActive])
}

model MonetizationConfig {
  id                   String                @id @default(cuid())
  monetizableType      String                @map("monetizable_type")
  monetizableId        String                @map("monetizable_id")
  mode                 MonetizationMode      @default(cpc)
  refCode              String                @unique @map("ref_code")
  affiliateLink        String?               @map("affiliate_link")
  fallbackLink         String?               @map("fallback_link")
  isTop                Boolean               @default(false) @map("is_top")
  isActive             Boolean               @default(true) @map("is_active")
  partnerId            String                @map("partner_id")
  cpcRate              Float?                @map("cpc_rate")
  affiliateRate        Float?                @map("affiliate_rate")
  totalClicks          Int                   @default(0) @map("total_clicks")
  totalAffiliateClicks Int                   @default(0) @map("total_affiliate_clicks")
  totalCpcClicks       Int                   @default(0) @map("total_cpc_clicks")
  totalConversions     Int                   @default(0) @map("total_conversions")
  totalRevenue         Float                 @default(0.0) @map("total_revenue")
  createdAt            DateTime              @default(now()) @map("created_at")
  updatedAt            DateTime              @updatedAt @map("updated_at")
  createdBy            String?               @map("created_by")
  affiliateClicks      AffiliateClick[]
  conversions          AffiliateConversion[]

  @@index([monetizableType, monetizableId], map: "idx_monetizable_entity")
  @@index([partnerId, isActive], map: "idx_partner_active")
  @@index([mode, isActive], map: "idx_mode_active")
  @@index([monetizableType])
  @@index([monetizableId])
  @@index([partnerId])
  @@map("monetization_configs")
}

model AffiliateClick {
  id              String               @id @default(cuid())
  monetizableType String               @map("monetizable_type")
  monetizableId   String               @map("monetizable_id")
  refCode         String               @map("ref_code")
  partnerId       String               @map("partner_id")
  timestamp       DateTime             @default(now())
  ipHash          String?              @map("ip_hash")
  userAgent       String?              @map("user_agent")
  referrer        String?
  clickSource     String?              @map("click_source")
  country         String?
  region          String?
  isValid         Boolean              @default(true) @map("is_valid")
  fraudReason     String?              @map("fraud_reason")
  conversionId    String?              @unique @map("conversion_id")
  isConverted     Boolean              @default(false) @map("is_converted")
  sessionId       String?              @map("session_id")
  config          MonetizationConfig   @relation(fields: [refCode], references: [refCode])
  conversion      AffiliateConversion? @relation("ClickToConversion")

  @@index([monetizableType, monetizableId], map: "idx_affiliate_entity")
  @@index([partnerId, timestamp], map: "idx_affiliate_partner")
  @@index([refCode, timestamp], map: "idx_affiliate_ref")
  @@index([sessionId, timestamp], map: "idx_affiliate_session")
  @@index([monetizableType])
  @@index([monetizableId])
  @@index([refCode])
  @@index([partnerId])
  @@index([sessionId])
  @@map("affiliate_clicks")
}

model AdClickMonetization {
  id                String   @id @default(cuid())
  monetizableType   String   @map("monetizable_type")
  monetizableId     String   @map("monetizable_id")
  campaignId        String?  @map("campaign_id")
  partnerId         String   @map("partner_id")
  timestamp         DateTime @default(now())
  ipHash            String?  @map("ip_hash")
  userAgent         String?  @map("user_agent")
  referrer          String?
  costPerClick      Float    @map("cost_per_click")
  currency          String   @default("USD")
  isValidClick      Boolean  @default(true) @map("is_valid_click")
  fraudReason       String?  @map("fraud_reason")
  country           String?
  conversionTracked Boolean  @default(false) @map("conversion_tracked")
  conversionValue   Float?   @map("conversion_value")

  @@index([monetizableType, monetizableId], map: "idx_adclick_entity")
  @@index([partnerId, timestamp], map: "idx_adclick_partner")
  @@index([campaignId, timestamp], map: "idx_adclick_campaign")
  @@index([partnerId, costPerClick], map: "idx_adclick_billing")
  @@index([monetizableType])
  @@index([monetizableId])
  @@index([campaignId])
  @@index([partnerId])
  @@map("ad_clicks_monetization")
}

model AffiliateConversion {
  id                     String             @id @default(cuid())
  affiliateClickId       String?            @unique @map("affiliate_click_id")
  refCode                String             @map("ref_code")
  partnerId              String             @map("partner_id")
  monetizableType        String             @map("monetizable_type")
  monetizableId          String             @map("monetizable_id")
  conversionType         ConversionType     @map("conversion_type")
  conversionValue        Float?             @map("conversion_value")
  currency               String             @default("USD")
  commissionRate         Float?             @map("commission_rate")
  commissionAmount       Float?             @map("commission_amount")
  timestamp              DateTime           @default(now())
  attributionWindowHours Int                @default(720) @map("attribution_window_hours")
  sessionId              String?            @map("session_id")
  externalConversionId   String?            @map("external_conversion_id")
  metadata               String?
  isBillable             Boolean            @default(true) @map("is_billable")
  billedAt               DateTime?          @map("billed_at")
  invoiceId              String?            @map("invoice_id")
  affiliateClick         AffiliateClick?    @relation("ClickToConversion", fields: [affiliateClickId], references: [id])
  config                 MonetizationConfig @relation(fields: [refCode], references: [refCode])

  @@index([monetizableType, monetizableId], map: "idx_conversion_entity")
  @@index([partnerId, timestamp], map: "idx_conversion_partner")
  @@index([partnerId, isBillable, billedAt], map: "idx_conversion_billing")
  @@index([refCode, timestamp], map: "idx_conversion_ref")
  @@index([affiliateClickId])
  @@index([refCode])
  @@index([partnerId])
  @@index([monetizableType])
  @@index([monetizableId])
  @@index([sessionId])
  @@map("affiliate_conversions")
}

model BillingAccount {
  id                        String    @id @default(cuid())
  partnerId                 String    @unique @map("partner_id")
  stripeCustomerId          String?   @unique @map("stripe_customer_id")
  creditBalance             Float     @default(0.0) @map("credit_balance")
  totalDeposited            Float     @default(0.0) @map("total_deposited")
  totalSpent                Float     @default(0.0) @map("total_spent")
  autoRechargeEnabled       Boolean   @default(false) @map("auto_recharge_enabled")
  autoRechargeThreshold     Float     @default(50.0) @map("auto_recharge_threshold")
  autoRechargeAmount        Float     @default(200.0) @map("auto_recharge_amount")
  dailySpendLimit           Float?    @map("daily_spend_limit")
  monthlySpendLimit         Float?    @map("monthly_spend_limit")
  isActive                  Boolean   @default(true) @map("is_active")
  isVerified                Boolean   @default(false) @map("is_verified")
  creditLimit               Float     @default(1000.0) @map("credit_limit")
  affiliateBillingEnabled   Boolean   @default(false) @map("affiliate_billing_enabled")
  affiliateBillingThreshold Float     @default(10.0) @map("affiliate_billing_threshold")
  lastAffiliateInvoiceDate  DateTime? @map("last_affiliate_invoice_date")
  createdAt                 DateTime  @default(now()) @map("created_at")
  updatedAt                 DateTime  @updatedAt @map("updated_at")
  lastActivityAt            DateTime? @map("last_activity_at")
  notes                     String?
  metadata                  String?

  @@index([partnerId, isActive], map: "idx_billing_partner")
  @@index([stripeCustomerId], map: "idx_billing_stripe")
  @@index([creditBalance, autoRechargeEnabled], map: "idx_billing_balance")
  @@map("billing_accounts")
}

model LandingPage {
  id              String   @id @default(uuid())
  slug            String   @unique
  title           String
  summary         String?
  language        String   @default("cs")
  contentHtml     String   @map("content_html")
  imageUrl        String?  @map("image_url")
  category        String?
  metaDescription String   @map("meta_description")
  metaKeywords    String   @map("meta_keywords")
  schemaOrg       String?  @map("schema_org")
  visuals         Json?
  faq             Json?
  format          String   @default("html")
  publishedAt     DateTime @default(now()) @map("published_at")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@index([slug])
  @@index([language])
  @@index([publishedAt])
  @@index([category])
  @@map("landing_pages")
}

enum MonetizationMode {
  cpc
  affiliate
  hybrid
}

enum ConversionType {
  registration
  trial_start
  subscription
  purchase
  lead
  custom
}
